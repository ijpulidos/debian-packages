#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Thu Sep  2 15:32:04 2010

import wx

wxEVT_FLOATCOMBO = wx.NewEventType()
EVT_FLOATCOMBO = wx.PyEventBinder(wxEVT_FLOATCOMBO, 0)

wxEVT_FLOATCOMBO_SPINUP = wx.NewEventType()
EVT_FLOATCOMBO_SPINUP = wx.PyEventBinder(wxEVT_FLOATCOMBO_SPINUP, 0)

wxEVT_FLOATCOMBO_SPINDOWN = wx.NewEventType()
EVT_FLOATCOMBO_SPINDOWN = wx.PyEventBinder(wxEVT_FLOATCOMBO_SPINDOWN, 0)

wxEVT_FLOATCOMBO_ENDSCROLL = wx.NewEventType()
EVT_FLOATCOMBO_ENDSCROLL = wx.PyEventBinder(wxEVT_FLOATCOMBO_ENDSCROLL, 0)

wxEVT_FLOATCOMBO_THUMTRACK = wx.NewEventType()
EVT_FLOATCOMBO_THUMTRACK = wx.PyEventBinder(wxEVT_FLOATCOMBO_THUMTRACK, 0)

wxEVT_FLOATCOMBO_PAGEUP = wx.NewEventType()
EVT_FLOATCOMBO_PAGEUP = wx.PyEventBinder(wxEVT_FLOATCOMBO_PAGEUP, 0)

wxEVT_FLOATCOMBO_PAGEDOWN = wx.NewEventType()
EVT_FLOATCOMBO_PAGEDOWN = wx.PyEventBinder(wxEVT_FLOATCOMBO_PAGEDOWN, 0)

wxEVT_FLOATCOMBO_LINEUP = wx.NewEventType()
EVT_FLOATCOMBO_LINEUP = wx.PyEventBinder(wxEVT_FLOATCOMBO_LINEUP, 0)

wxEVT_FLOATCOMBO_LINEDOWN = wx.NewEventType()
EVT_FLOATCOMBO_LINEDOWN = wx.PyEventBinder(wxEVT_FLOATCOMBO_LINEDOWN, 0)

wxEVT_FLOATCOMBO_TOP = wx.NewEventType()
EVT_FLOATCOMBO_TOP = wx.PyEventBinder(wxEVT_FLOATCOMBO_TOP, 0)

wxEVT_FLOATCOMBO_BOTTOM = wx.NewEventType()
EVT_FLOATCOMBO_BOTTOM = wx.PyEventBinder(wxEVT_FLOATCOMBO_BOTTOM, 0)

wxEVT_FLOATCOMBO_THUMBRELEASE = wx.NewEventType()
EVT_FLOATCOMBO_THUMBRELEASE = wx.PyEventBinder(wxEVT_FLOATCOMBO_THUMBRELEASE, 0)

wxEVT_FLOATCOMBO_TEXT_ENTER = wx.NewEventType()
EVT_FLOATCOMBO_TEXT_ENTER = wx.PyEventBinder(wxEVT_FLOATCOMBO_TEXT_ENTER, 0)

class FloatComboEvent(wx.PyCommandEvent):

    def __init__(self, eventType, id=1):
        """ Default class constructor. """
        wx.PyCommandEvent.__init__(self, eventType, id)


    def SetValue(self, value):

        self._value = value


    def GetValue(self):

        return self._value



class FloatCombo(wx.Control):
    def __init__(self, *args, **kwds):
        
        wx.Control.__init__(self, *args, **kwds)
        self.slider = wx.Slider(self, -1, 0, 0, 10)
        self.label_min = wx.StaticText(self, -1, "label_3")
        self.label_max = wx.StaticText(self, -1, "label_4")
        self.text_ctrl = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER)
        self.spin_button = wx.SpinButton(self, -1 )

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMMAND_SCROLL, self.OnScroll, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_ENDSCROLL, self.OnScrollEndScroll, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_THUMBTRACK, self.OnScrollThumTrack, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_PAGEDOWN, self.OnScrollPageDown, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_PAGEUP, self.OnScrollPageUp, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_LINEDOWN, self.OnScrollLineDown, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_TOP, self.OnScrollTop, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_BOTTOM, self.OnScrollBottom, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_LINEUP, self.OnScrollLineUp, self.slider)
        self.Bind(wx.EVT_COMMAND_SCROLL_THUMBRELEASE, self.OnScrollThumbRelease, self.slider)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnTextEnter, self.text_ctrl)
        self.Bind(wx.EVT_SPIN_DOWN, self.OnSpinDown, self.spin_button)
        self.Bind(wx.EVT_SPIN_UP, self.OnSpinUp, self.spin_button)
        self.Bind(wx.EVT_SPIN, self.OnSpin, self.spin_button)
        
        self.Bind(wx.EVT_SIZE,self.OnSize)
        
        self.Value=0
        self.min=0
        self.max=10
        self.steps=1000
        self.units=""
        self.labelrounding=2
        self.SetMin(0)
        self.SetMax(10)
        self.SetSteps(1000)
        self.SetValue(5)

    def __set_properties(self):
        # begin wxGlade: numControl.__set_properties
        pass#self.SetTitle("frame_1")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: numControl.__do_layout
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11.Add(self.slider, 0, wx.EXPAND, 0)
        sizer_12.Add(self.label_min, 0, 0, 0)
        sizer_12.Add((20, 20), 1, wx.EXPAND, 0)
        sizer_12.Add(self.label_max, 0, 0, 0)
        sizer_11.Add(sizer_12, 0, wx.EXPAND, 0)
        sizer_10.Add(sizer_11, 1, wx.EXPAND, 0)
        sizer_10.Add(self.text_ctrl, 0, 0, 0)
        sizer_10.Add(self.spin_button, 0, 0, 0)
        self.SetSizer(sizer_10)
        sizer_10.Fit(self)
        self.Layout()
        # end wxGlade
        
    def SetValue(self,value):
        
        if self.max==self.min:
            v=self.max
        else: v=int((value-self.min)/float(self.max-self.min)*float(self.steps))
        self.slider.Value=v
        self.spin_button.Value=v
        self.Value=self.min+float(self.max-self.min)*self.slider.Value/float(self.steps)
        self.text_ctrl.SetValue(str(self.Value))
        
    def SetMin(self,min):
        self.min=float(min)
        self.label_min.SetLabel(str(round(self.min,self.labelrounding))+" "+self.units)
        self.SetValue(self.Value)
    
    def SetMax(self,max):
        self.max=float(max)
        self.label_max.SetLabel(str(round(self.max,self.labelrounding))+" "+self.units)
        self.SetValue(self.Value)
        
    def SetSteps(self,steps):
        self.steps=steps
        
        #The 2 ranges must be sinchronized
        self.slider.SetRange(0,self.steps)
        self.spin_button.SetRange(0,self.steps)
    
    def OnClose(self, event):
        print "OC"
        
    def OnScroll(self, event):
        #The 2 values must be synchronized
        self.spin_button.Value=self.slider.Value
        self.Value=self.min+float(self.max-self.min)*self.slider.Value/float(self.steps)
        self.text_ctrl.SetValue(str(self.Value))
        self.PostValue(wxEVT_FLOATCOMBO)

    def OnScrollEndScroll(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_ENDSCROLL)
        
    def OnScrollThumTrack(self, event):
        self.PostValue(wxEVT_FLOATCOMBO_THUMTRACK)
        event.Skip()
        
    def OnScrollPageDown(self, event):
        self.PostValue(wxEVT_FLOATCOMBO_PAGEDOWN)
        event.Skip()
        
    def OnScrollPageUp(self, event):
        self.PostValue(wxEVT_FLOATCOMBO_PAGEUP)
        event.Skip()
        
    def OnScrollLineDown(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_LINEDOWN)
        event.Skip()
        
    def OnScrollLineUp(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_LINEUP)
        event.Skip()
        
    def OnScrollTop(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_TOP)
        event.Skip()
        
    def OnScrollBottom(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_BOTTOM)
        event.Skip()
        
    def OnScrollThumbRelease(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_THUMBRELEASE)
        event.Skip()
        
    def OnSpinDown(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_SPINDOWN)
        event.Skip()
        
    def OnSpinUp(self, event): 
        self.PostValue(wxEVT_FLOATCOMBO_SPINUP)
        event.Skip()
        
    def OnSpin(self, event):
        #The 2 values must be sinchronized
        self.slider.Value=self.spin_button.Value
        self.Value=self.min+float(self.max-self.min)*self.slider.Value/float(self.steps)
        self.text_ctrl.SetValue(str(self.Value))
        self.PostValue(wxEVT_FLOATCOMBO)

    def OnTextEnter(self, event): 
        txt=self.text_ctrl.GetValue()
        try:
            val=float(txt)
        except ValueError:
            val=self.Value
        self.SetValue(val)
        
        self.PostValue(wxEVT_FLOATCOMBO_TEXT_ENTER)
        
        
    def OnSize(self,event):
        #self.SetSize(event.GetSize())
        self.Layout()

    def PostValue(self,event):
        evt=FloatComboEvent(event, self.GetId())
        evt.SetEventObject(self)        
        evt.SetValue(self.Value)
        self.GetEventHandler().ProcessEvent(evt)


# end of class numControl





